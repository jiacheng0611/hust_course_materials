<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="106" passed="106" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-04-23T11:45:02Z" name="All Test Suite" finished-at="2021-04-23T11:45:04Z" duration-ms="2550">
    <groups>
    </groups>
    <test started-at="2021-04-23T11:45:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java" finished-at="2021-04-23T11:45:02Z" duration-ms="98">
      <class name="hust.cs.javacourse.search.index.TermTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@66d1af89]" started-at="2021-04-23T11:45:02Z" name="testTestEquals" data-provider="testTerm" finished-at="2021-04-23T11:45:02Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@501edcf1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@66d1af89]" started-at="2021-04-23T11:45:02Z" name="testTestEquals" data-provider="testTerm" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@78b729e6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@66d1af89]" started-at="2021-04-23T11:45:02Z" name="testTestToString" data-provider="testTerm" finished-at="2021-04-23T11:45:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@66d1af89]" started-at="2021-04-23T11:45:02Z" name="testGetContent" data-provider="testTerm" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@66d1af89]" started-at="2021-04-23T11:45:02Z" name="testCompareTo" data-provider="testTerm" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@78dd667e]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@66d1af89]" started-at="2021-04-23T11:45:02Z" name="testCompareTo" data-provider="testTerm" finished-at="2021-04-23T11:45:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@10db82ae]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@66d1af89]" started-at="2021-04-23T11:45:02Z" name="testSetContent" data-provider="testTerm" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@66d1af89]" started-at="2021-04-23T11:45:02Z" name="testWriteObject" data-provider="testTerm" finished-at="2021-04-23T11:45:02Z" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/HomeWork/2020_2021JavaPPT/Java_new_Task1/Experiment1Test/Experiment1Test/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@66d1af89]" started-at="2021-04-23T11:45:02Z" name="testReadObject" data-provider="testTerm" finished-at="2021-04-23T11:45:02Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/HomeWork/2020_2021JavaPPT/Java_new_Task1/Experiment1Test/Experiment1Test/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.TermTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java -->
    <test started-at="2021-04-23T11:45:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java" finished-at="2021-04-23T11:45:02Z" duration-ms="4">
      <class name="hust.cs.javacourse.search.index.TermTupleTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@1990a65e]" started-at="2021-04-23T11:45:02Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@47542153]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@1990a65e]" started-at="2021-04-23T11:45:02Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@33afa13b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@1990a65e]" started-at="2021-04-23T11:45:02Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-04-23T11:45:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@7a4ccb53]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTermTuple, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@1990a65e]" started-at="2021-04-23T11:45:02Z" name="testTestToString" data-provider="testTermTuple" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(term:Search,freq:1,curPos100)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@309e345f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
      </class> <!-- hust.cs.javacourse.search.index.TermTupleTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java -->
    <test started-at="2021-04-23T11:45:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java" finished-at="2021-04-23T11:45:02Z" duration-ms="17">
      <class name="hust.cs.javacourse.search.index.PostingTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@706a04ae]" started-at="2021-04-23T11:45:02Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@7f010382]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@706a04ae]" started-at="2021-04-23T11:45:02Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@1e802ef9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@706a04ae]" started-at="2021-04-23T11:45:02Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@2b6faea6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@706a04ae]" started-at="2021-04-23T11:45:02Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@778d1062]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@706a04ae]" started-at="2021-04-23T11:45:02Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@670002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPosting, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@706a04ae]" started-at="2021-04-23T11:45:02Z" name="testTestToString" data-provider="testPosting" finished-at="2021-04-23T11:45:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(docId:1,freq4,positions[10, 100, 320, 400])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1f0f1111]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@706a04ae]" started-at="2021-04-23T11:45:02Z" name="testGetDocId" data-provider="testPosting" finished-at="2021-04-23T11:45:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(docId:1,freq4,positions[10, 100, 320, 400])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@706a04ae]" started-at="2021-04-23T11:45:02Z" name="testGetFreq" data-provider="testPosting" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(docId:1,freq4,positions[10, 100, 320, 400])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFreq -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@706a04ae]" started-at="2021-04-23T11:45:02Z" name="testSetDocId" data-provider="testPosting" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(docId:20,freq0,positions[])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testGetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@706a04ae]" started-at="2021-04-23T11:45:02Z" name="testGetPositions" data-provider="testPosting" finished-at="2021-04-23T11:45:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(docId:1,freq4,positions[10, 100, 320, 400])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPositions -->
        <test-method signature="testSetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@706a04ae]" started-at="2021-04-23T11:45:02Z" name="testSetFreq" data-provider="testPosting" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(docId:0,freq8,positions[])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetFreq -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractPosting;, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@706a04ae]" started-at="2021-04-23T11:45:02Z" name="testCompareTo" data-provider="testPosting" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@4313f5bc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testSetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@706a04ae]" started-at="2021-04-23T11:45:02Z" name="testSetPositions" data-provider="testPosting" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(docId:0,freq0,positions[100, 320, 400])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetPositions -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@706a04ae]" started-at="2021-04-23T11:45:02Z" name="testSort" data-provider="testPosting" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(docId:1,freq4,positions[10, 100, 320, 400])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@706a04ae]" started-at="2021-04-23T11:45:02Z" name="testWriteObject" data-provider="testPosting" finished-at="2021-04-23T11:45:02Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(docId:1,freq4,positions[10, 100, 320, 400])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/HomeWork/2020_2021JavaPPT/Java_new_Task1/Experiment1Test/Experiment1Test/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@706a04ae]" started-at="2021-04-23T11:45:02Z" name="testReadObject" data-provider="testPosting" finished-at="2021-04-23T11:45:02Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(docId:1,freq4,positions[10, 100, 320, 400])]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/HomeWork/2020_2021JavaPPT/Java_new_Task1/Experiment1Test/Experiment1Test/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java -->
    <test started-at="2021-04-23T11:45:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java" finished-at="2021-04-23T11:45:02Z" duration-ms="15">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method signature="testAdd(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="testAdd" data-provider="testPostingList" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[(docId:1,freq4,positions[1, 2, 3, 4]), (docId:2,freq2,positions[5, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@10e92f8f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method signature="testGet(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="testGet" data-provider="testPostingList" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[(docId:1,freq4,positions[1, 2, 3, 4]), (docId:2,freq2,positions[5, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@78b66d36]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method signature="testTestAdd(hust.cs.javacourse.search.index.AbstractPostingList, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="testTestAdd" data-provider="testPostingList" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[(docId:1,freq4,positions[1, 2, 3, 4]), (docId:2,freq2,positions[5, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[(docId:1,freq4,positions[1, 2, 3, 4]), (docId:1,freq4,positions[1, 2, 3, 4]), (docId:2,freq2,positions[5, 6])]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestAdd -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="testTestToString" data-provider="testPostingList" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[(docId:1,freq4,positions[1, 2, 3, 4]), (docId:2,freq2,positions[5, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1d119efb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testTestIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="testTestIndexOf" data-provider="testPostingList" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[(docId:1,freq4,positions[1, 2, 3, 4]), (docId:2,freq2,positions[5, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@22a637e7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestIndexOf -->
        <test-method signature="testIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="testIndexOf" data-provider="testPostingList" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[(docId:1,freq4,positions[1, 2, 3, 4]), (docId:2,freq2,positions[5, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@5223e5ee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="testContains" data-provider="testPostingList" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[(docId:1,freq4,positions[1, 2, 3, 4])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@7ce3cb8e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="testRemove" data-provider="testPostingList" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@bef2d72]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method signature="testTestRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="testTestRemove" data-provider="testPostingList" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@6fe7aac8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestRemove -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="testSize" data-provider="testPostingList" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[(docId:1,freq4,positions[1, 2, 3, 4]), (docId:2,freq2,positions[5, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="testSize" data-provider="testPostingList" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testClear(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.Object)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="testClear" data-provider="testPostingList" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[(docId:1,freq4,positions[1, 2, 3, 4]), (docId:2,freq2,positions[5, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.Integer;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="testSort" data-provider="testPostingList" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[(docId:2,freq4,positions[5, 7, 8, 9]), (docId:3,freq2,positions[10, 11]), (docId:4,freq4,positions[1, 2, 3, 4])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Integer;@69b2283a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="testWriteObject" data-provider="testPostingList" finished-at="2021-04-23T11:45:02Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[(docId:1,freq4,positions[1, 2, 3, 4]), (docId:2,freq2,positions[5, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/HomeWork/2020_2021JavaPPT/Java_new_Task1/Experiment1Test/Experiment1Test/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="testReadObject" data-provider="testPostingList" finished-at="2021-04-23T11:45:02Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[(docId:1,freq4,positions[1, 2, 3, 4]), (docId:2,freq2,positions[5, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/HomeWork/2020_2021JavaPPT/Java_new_Task1/Experiment1Test/Experiment1Test/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java -->
    <test started-at="2021-04-23T11:45:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java" finished-at="2021-04-23T11:45:02Z" duration-ms="5">
      <class name="hust.cs.javacourse.search.index.DocumentTest">
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5d11346a]" started-at="2021-04-23T11:45:02Z" name="testGetDocId" data-provider="testDocument" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1,docPath:C:/1.txt,tuples:[(term:aaa,freq:1,curPos17)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5d11346a]" started-at="2021-04-23T11:45:02Z" name="testSetDocId" data-provider="testDocument" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:2,docPath:null,tuples:[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5d11346a]" started-at="2021-04-23T11:45:02Z" name="testGetDocPath" data-provider="testDocument" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1,docPath:C:/1.txt,tuples:[(term:aaa,freq:1,curPos17)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testAddTuple(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5d11346a]" started-at="2021-04-23T11:45:02Z" name="testAddTuple" data-provider="testDocument" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1,docPath:C:/1.txt,tuples:[(term:aaa,freq:1,curPos17)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[(term:aaa,freq:1,curPos17)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddTuple -->
        <test-method signature="testSetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5d11346a]" started-at="2021-04-23T11:45:02Z" name="testSetDocPath" data-provider="testDocument" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0,docPath:C:/2.txt,tuples:[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocPath -->
        <test-method signature="testGetTuple(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5d11346a]" started-at="2021-04-23T11:45:02Z" name="testGetTuple" data-provider="testDocument" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1,docPath:C:/1.txt,tuples:[(term:aaa,freq:1,curPos17), (term:bbb,freq:1,curPos30)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[(term:aaa,freq:1,curPos17), (term:bbb,freq:1,curPos30)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuple -->
        <test-method signature="testGetTuples(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5d11346a]" started-at="2021-04-23T11:45:02Z" name="testGetTuples" data-provider="testDocument" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1,docPath:C:/1.txt,tuples:[(term:aaa,freq:1,curPos17), (term:bbb,freq:1,curPos30)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[(term:aaa,freq:1,curPos17), (term:bbb,freq:1,curPos30)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuples -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5d11346a]" started-at="2021-04-23T11:45:02Z" name="testContains" data-provider="testDocument" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1,docPath:C:/1.txt,tuples:[(term:aaa,freq:1,curPos17), (term:bbb,freq:1,curPos30)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[(term:aaa,freq:1,curPos17)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5d11346a]" started-at="2021-04-23T11:45:02Z" name="testContains" data-provider="testDocument" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1,docPath:C:/1.txt,tuples:[(term:aaa,freq:1,curPos17), (term:bbb,freq:1,curPos30)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[(term:bbb,freq:1,curPos30)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractDocument, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5d11346a]" started-at="2021-04-23T11:45:02Z" name="testTestToString" data-provider="testDocument" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1,docPath:C:/1.txt,tuples:[(term:aaa,freq:1,curPos17), (term:bbb,freq:1,curPos30)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4b5d6a01]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5d11346a]" started-at="2021-04-23T11:45:02Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1,docPath:C:/1.txt,tuples:[(term:aaa,freq:1,curPos17), (term:bbb,freq:1,curPos30)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5d11346a]" started-at="2021-04-23T11:45:02Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1,docPath:C:/1.txt,tuples:[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java -->
    <test started-at="2021-04-23T11:45:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java" finished-at="2021-04-23T11:45:02Z" duration-ms="11">
      <class name="hust.cs.javacourse.search.parse.TermTupleScannerTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@52525845]" started-at="2021-04-23T11:45:02Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2021-04-23T11:45:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@1622f1b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[(term:aaa,freq:1,curPos0), (term:bbb,freq:1,curPos1), (term:ccc,freq:1,curPos2), (term:ddd,freq:1,curPos3), (term:is,freq:1,curPos4), (term:f17,freq:1,curPos5), (term:2020,freq:1,curPos6), (term:ab,freq:1,curPos7), (term:ababababababababababab,freq:1,curPos8)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@52525845]" started-at="2021-04-23T11:45:02Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2021-04-23T11:45:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@72a7c7e0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:26%,freq:1,curPos3), (term:u571,freq:1,curPos4), (term:because,freq:1,curPos5), (term:hence,freq:1,curPos6), (term:capital,freq:1,curPos7), (term:i,freq:1,curPos8), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:hahahahahahahahahahahahah,freq:1,curPos12), (term:ha,freq:1,curPos13), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.TermTupleScannerTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java -->
    <test started-at="2021-04-23T11:45:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java" finished-at="2021-04-23T11:45:02Z" duration-ms="22">
      <class name="hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@587c290d]" started-at="2021-04-23T11:45:02Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-04-23T11:45:02Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@19bb07ed]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[(term:aaa,freq:1,curPos0), (term:bbb,freq:1,curPos1), (term:ccc,freq:1,curPos2), (term:ddd,freq:1,curPos3), (term:f17,freq:1,curPos4), (term:2020,freq:1,curPos5), (term:ab,freq:1,curPos6), (term:ababababababababababab,freq:1,curPos7)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@587c290d]" started-at="2021-04-23T11:45:02Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-04-23T11:45:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@10e41621]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[(term:aaa,freq:1,curPos0), (term:bbb,freq:1,curPos1), (term:ccc,freq:1,curPos3), (term:ddd,freq:1,curPos4), (term:f17,freq:1,curPos6), (term:2020,freq:1,curPos7), (term:ab,freq:1,curPos8), (term:ababababababababababab,freq:1,curPos10)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@587c290d]" started-at="2021-04-23T11:45:02Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-04-23T11:45:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@353d0772]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:26%,freq:1,curPos3), (term:u571,freq:1,curPos4), (term:capital,freq:1,curPos7), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:hahahahahahahahahahahahah,freq:1,curPos12), (term:ha,freq:1,curPos13), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java -->
    <test started-at="2021-04-23T11:45:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java" finished-at="2021-04-23T11:45:02Z" duration-ms="8">
      <class name="hust.cs.javacourse.search.parse.PatternTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@44a3ec6b]" started-at="2021-04-23T11:45:02Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2021-04-23T11:45:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@64cd705f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[(term:aaa,freq:1,curPos0), (term:bbb,freq:1,curPos2), (term:ab,freq:1,curPos3), (term:ccc,freq:1,curPos4), (term:ddd,freq:1,curPos5), (term:ababababababababababab,freq:1,curPos7)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@44a3ec6b]" started-at="2021-04-23T11:45:02Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2021-04-23T11:45:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@9225652]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:because,freq:1,curPos5), (term:hence,freq:1,curPos6), (term:capital,freq:1,curPos7), (term:i,freq:1,curPos8), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:hahahahahahahahahahahahah,freq:1,curPos12), (term:ha,freq:1,curPos13), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.PatternTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java -->
    <test started-at="2021-04-23T11:45:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java" finished-at="2021-04-23T11:45:02Z" duration-ms="15">
      <class name="hust.cs.javacourse.search.parse.LengthTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@4bb4de6a]" started-at="2021-04-23T11:45:02Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2021-04-23T11:45:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@9353778]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[(term:aaa,freq:1,curPos0), (term:bbb,freq:1,curPos1), (term:ccc,freq:1,curPos3), (term:ddd,freq:1,curPos4), (term:f17,freq:1,curPos5), (term:2020,freq:1,curPos6)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@4bb4de6a]" started-at="2021-04-23T11:45:02Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2021-04-23T11:45:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@6a28ffa4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:26%,freq:1,curPos3), (term:u571,freq:1,curPos4), (term:because,freq:1,curPos5), (term:hence,freq:1,curPos6), (term:capital,freq:1,curPos7), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.LengthTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java -->
    <test started-at="2021-04-23T11:45:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java" finished-at="2021-04-23T11:45:02Z" duration-ms="6">
      <class name="hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@6483f5ae]" started-at="2021-04-23T11:45:02Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2021-04-23T11:45:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@31d7b7bf]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[(term:aaa,freq:1,curPos1), (term:bbb,freq:1,curPos2), (term:ccc,freq:1,curPos4), (term:ddd,freq:1,curPos6)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@6483f5ae]" started-at="2021-04-23T11:45:02Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2021-04-23T11:45:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@635eaaf1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:capital,freq:1,curPos7), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java -->
    <test started-at="2021-04-23T11:45:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java" finished-at="2021-04-23T11:45:03Z" duration-ms="996">
      <class name="hust.cs.javacourse.search.index.DocumentBuilderTest">
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6366ebe0]" started-at="2021-04-23T11:45:03Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-04-23T11:45:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0,docPath:D:/HomeWork/2020_2021JavaPPT/Java_new_Task1/Experiment1Test/Experiment1Test/test/config/..//text/2.txt,tuples:[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:26%,freq:1,curPos3), (term:U571,freq:1,curPos4), (term:because,freq:1,curPos5), (term:hence,freq:1,curPos6), (term:capital,freq:1,curPos7), (term:i,freq:1,curPos8), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:hahahahahahahahahahahahah,freq:1,curPos12), (term:ha,freq:1,curPos13), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0,docPath:D:\IdeaWorkspace\SeachEngine/text/2.txt,tuples:[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:26%,freq:1,curPos3), (term:u571,freq:1,curPos4), (term:because,freq:1,curPos5), (term:hence,freq:1,curPos6), (term:capital,freq:1,curPos7), (term:i,freq:1,curPos8), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:hahahahahahahahahahahahah,freq:1,curPos12), (term:ha,freq:1,curPos13), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6366ebe0]" started-at="2021-04-23T11:45:03Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-04-23T11:45:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0,docPath:D:/HomeWork/2020_2021JavaPPT/Java_new_Task1/Experiment1Test/Experiment1Test/test/config/..//text/2.txt,tuples:[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:because,freq:1,curPos5), (term:hence,freq:1,curPos6), (term:capital,freq:1,curPos7), (term:i,freq:1,curPos8), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:hahahahahahahahahahahahah,freq:1,curPos12), (term:ha,freq:1,curPos13), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0,docPath:D:\IdeaWorkspace\SeachEngine/text/2.txt,tuples:[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:because,freq:1,curPos5), (term:hence,freq:1,curPos6), (term:capital,freq:1,curPos7), (term:i,freq:1,curPos8), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:hahahahahahahahahahahahah,freq:1,curPos12), (term:ha,freq:1,curPos13), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6366ebe0]" started-at="2021-04-23T11:45:03Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-04-23T11:45:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0,docPath:D:/HomeWork/2020_2021JavaPPT/Java_new_Task1/Experiment1Test/Experiment1Test/test/config/..//text/2.txt,tuples:[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:26%,freq:1,curPos3), (term:U571,freq:1,curPos4), (term:capital,freq:1,curPos7), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:hahahahahahahahahahahahah,freq:1,curPos12), (term:ha,freq:1,curPos13), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0,docPath:D:\IdeaWorkspace\SeachEngine/text/2.txt,tuples:[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:26%,freq:1,curPos3), (term:u571,freq:1,curPos4), (term:capital,freq:1,curPos7), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:hahahahahahahahahahahahah,freq:1,curPos12), (term:ha,freq:1,curPos13), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6366ebe0]" started-at="2021-04-23T11:45:03Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-04-23T11:45:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0,docPath:D:/HomeWork/2020_2021JavaPPT/Java_new_Task1/Experiment1Test/Experiment1Test/test/config/..//text/2.txt,tuples:[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:capital,freq:1,curPos7), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0,docPath:D:\IdeaWorkspace\SeachEngine/text/2.txt,tuples:[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:capital,freq:1,curPos7), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6366ebe0]" started-at="2021-04-23T11:45:03Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-04-23T11:45:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0,docPath:D:/HomeWork/2020_2021JavaPPT/Java_new_Task1/Experiment1Test/Experiment1Test/test/config/..//text/2.txt,tuples:[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:26%,freq:1,curPos3), (term:U571,freq:1,curPos4), (term:because,freq:1,curPos5), (term:hence,freq:1,curPos6), (term:capital,freq:1,curPos7), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0,docPath:D:\IdeaWorkspace\SeachEngine/text/2.txt,tuples:[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:26%,freq:1,curPos3), (term:u571,freq:1,curPos4), (term:because,freq:1,curPos5), (term:hence,freq:1,curPos6), (term:capital,freq:1,curPos7), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6366ebe0]" started-at="2021-04-23T11:45:03Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2021-04-23T11:45:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0,docPath:D:/HomeWork/2020_2021JavaPPT/Java_new_Task1/Experiment1Test/Experiment1Test/test/config/..//text/2.txt,tuples:[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:capital,freq:1,curPos7), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0,docPath:D:\IdeaWorkspace\SeachEngine/text/2.txt,tuples:[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:capital,freq:1,curPos7), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@6366ebe0]" started-at="2021-04-23T11:45:03Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2021-04-23T11:45:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0,docPath:D:/HomeWork/2020_2021JavaPPT/Java_new_Task1/Experiment1Test/Experiment1Test/test/config/..//text/2.txt,tuples:[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:capital,freq:1,curPos7), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0,docPath:D:\IdeaWorkspace\SeachEngine/text/2.txt,tuples:[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:capital,freq:1,curPos7), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentBuilderTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java -->
    <test started-at="2021-04-23T11:45:03Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java" finished-at="2021-04-23T11:45:04Z" duration-ms="529">
      <class name="hust.cs.javacourse.search.index.IndexTest">
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1cab0bfb]" started-at="2021-04-23T11:45:03Z" name="testTestToString" data-provider="testIndex" finished-at="2021-04-23T11:45:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{
"docIdToDocPathMapping" : {
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}},
"termToPostingListMapping" : {
{activity=[(docId:0,freq3,positions[0, 1, 6]), (docId:1,freq1,positions[0])], benefits=[(docId:0,freq2,positions[2, 7]), (docId:1,freq1,positions[10])], capital=[(docId:0,freq2,positions[3, 8]), (docId:1,freq1,positions[7])], destination=[(docId:0,freq2,positions[4, 9]), (docId:1,freq1,positions[1])], emergency=[(docId:0,freq1,positions[10]), (docId:1,freq1,positions[2])], fizzy=[(docId:0,freq1,positions[5])], frozen=[(docId:1,freq2,positions[9, 14])], google=[(docId:1,freq2,positions[11, 15])], marketplace=[(docId:2,freq1,positions[0])], medical=[(docId:2,freq1,positions[1])], notification=[(docId:2,freq1,positions[3])], peninsula=[(docId:2,freq1,positions[5])], pollution=[(docId:2,freq1,positions[7])]}}
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@63a270c9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testAddDocument([Lhust.cs.javacourse.search.index.AbstractIndex;, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1cab0bfb]" started-at="2021-04-23T11:45:03Z" name="testAddDocument" data-provider="testIndex" finished-at="2021-04-23T11:45:03Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractIndex;@3e30646a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:1,docPath:D:\IdeaWorkspace\SeachEngine/text/2.txt,tuples:[(term:activity,freq:1,curPos0), (term:destination,freq:1,curPos1), (term:emergency,freq:1,curPos2), (term:capital,freq:1,curPos7), (term:frozen,freq:1,curPos9), (term:benefits,freq:1,curPos10), (term:google,freq:1,curPos11), (term:frozen,freq:1,curPos14), (term:google,freq:1,curPos15)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDocument -->
        <test-method signature="testLoad(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1cab0bfb]" started-at="2021-04-23T11:45:03Z" name="testLoad" data-provider="testIndex" finished-at="2021-04-23T11:45:03Z" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{
"docIdToDocPathMapping" : {
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}},
"termToPostingListMapping" : {
{activity=[(docId:0,freq3,positions[0, 1, 6]), (docId:1,freq1,positions[0])], benefits=[(docId:0,freq2,positions[2, 7]), (docId:1,freq1,positions[10])], capital=[(docId:0,freq2,positions[3, 8]), (docId:1,freq1,positions[7])], destination=[(docId:0,freq2,positions[4, 9]), (docId:1,freq1,positions[1])], emergency=[(docId:0,freq1,positions[10]), (docId:1,freq1,positions[2])], fizzy=[(docId:0,freq1,positions[5])], frozen=[(docId:1,freq2,positions[9, 14])], google=[(docId:1,freq2,positions[11, 15])], marketplace=[(docId:2,freq1,positions[0])], medical=[(docId:2,freq1,positions[1])], notification=[(docId:2,freq1,positions[3])], peninsula=[(docId:2,freq1,positions[5])], pollution=[(docId:2,freq1,positions[7])]}}
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/HomeWork/2020_2021JavaPPT/Java_new_Task1/Experiment1Test/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoad -->
        <test-method signature="testSave(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1cab0bfb]" started-at="2021-04-23T11:45:03Z" name="testSave" data-provider="testIndex" finished-at="2021-04-23T11:45:03Z" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{
"docIdToDocPathMapping" : {
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}},
"termToPostingListMapping" : {
{activity=[(docId:0,freq3,positions[0, 1, 6]), (docId:1,freq1,positions[0])], benefits=[(docId:0,freq2,positions[2, 7]), (docId:1,freq1,positions[10])], capital=[(docId:0,freq2,positions[3, 8]), (docId:1,freq1,positions[7])], destination=[(docId:0,freq2,positions[4, 9]), (docId:1,freq1,positions[1])], emergency=[(docId:0,freq1,positions[10]), (docId:1,freq1,positions[2])], fizzy=[(docId:0,freq1,positions[5])], frozen=[(docId:1,freq2,positions[9, 14])], google=[(docId:1,freq2,positions[11, 15])], marketplace=[(docId:2,freq1,positions[0])], medical=[(docId:2,freq1,positions[1])], notification=[(docId:2,freq1,positions[3])], peninsula=[(docId:2,freq1,positions[5])], pollution=[(docId:2,freq1,positions[7])]}}
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/HomeWork/2020_2021JavaPPT/Java_new_Task1/Experiment1Test/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSave -->
        <test-method signature="testSearch(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractPostingList)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1cab0bfb]" started-at="2021-04-23T11:45:03Z" name="testSearch" data-provider="testIndex" finished-at="2021-04-23T11:45:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{
"docIdToDocPathMapping" : {
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}},
"termToPostingListMapping" : {
{activity=[(docId:0,freq3,positions[0, 1, 6]), (docId:1,freq1,positions[0])], benefits=[(docId:0,freq2,positions[2, 7]), (docId:1,freq1,positions[10])], capital=[(docId:0,freq2,positions[3, 8]), (docId:1,freq1,positions[7])], destination=[(docId:0,freq2,positions[4, 9]), (docId:1,freq1,positions[1])], emergency=[(docId:0,freq1,positions[10]), (docId:1,freq1,positions[2])], fizzy=[(docId:0,freq1,positions[5])], frozen=[(docId:1,freq2,positions[9, 14])], google=[(docId:1,freq2,positions[11, 15])], marketplace=[(docId:2,freq1,positions[0])], medical=[(docId:2,freq1,positions[1])], notification=[(docId:2,freq1,positions[3])], peninsula=[(docId:2,freq1,positions[5])], pollution=[(docId:2,freq1,positions[7])]}}
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[(docId:0,freq3,positions[0, 1, 6]), (docId:1,freq1,positions[0])]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testGetDictionary(hust.cs.javacourse.search.index.AbstractIndex, java.util.Set)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1cab0bfb]" started-at="2021-04-23T11:45:03Z" name="testGetDictionary" data-provider="testIndex" finished-at="2021-04-23T11:45:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{
"docIdToDocPathMapping" : {
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}},
"termToPostingListMapping" : {
{activity=[(docId:0,freq3,positions[0, 1, 6]), (docId:1,freq1,positions[0])], benefits=[(docId:0,freq2,positions[2, 7]), (docId:1,freq1,positions[10])], capital=[(docId:0,freq2,positions[3, 8]), (docId:1,freq1,positions[7])], destination=[(docId:0,freq2,positions[4, 9]), (docId:1,freq1,positions[1])], emergency=[(docId:0,freq1,positions[10]), (docId:1,freq1,positions[2])], fizzy=[(docId:0,freq1,positions[5])], frozen=[(docId:1,freq2,positions[9, 14])], google=[(docId:1,freq2,positions[11, 15])], marketplace=[(docId:2,freq1,positions[0])], medical=[(docId:2,freq1,positions[1])], notification=[(docId:2,freq1,positions[3])], peninsula=[(docId:2,freq1,positions[5])], pollution=[(docId:2,freq1,positions[7])]}}
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDictionary -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1cab0bfb]" started-at="2021-04-23T11:45:04Z" name="testWriteObject" data-provider="testIndex" finished-at="2021-04-23T11:45:04Z" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{
"docIdToDocPathMapping" : {
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}},
"termToPostingListMapping" : {
{activity=[(docId:0,freq3,positions[0, 1, 6]), (docId:1,freq1,positions[0])], benefits=[(docId:0,freq2,positions[2, 7]), (docId:1,freq1,positions[10])], capital=[(docId:0,freq2,positions[3, 8]), (docId:1,freq1,positions[7])], destination=[(docId:0,freq2,positions[4, 9]), (docId:1,freq1,positions[1])], emergency=[(docId:0,freq1,positions[10]), (docId:1,freq1,positions[2])], fizzy=[(docId:0,freq1,positions[5])], frozen=[(docId:1,freq2,positions[9, 14])], google=[(docId:1,freq2,positions[11, 15])], marketplace=[(docId:2,freq1,positions[0])], medical=[(docId:2,freq1,positions[1])], notification=[(docId:2,freq1,positions[3])], peninsula=[(docId:2,freq1,positions[5])], pollution=[(docId:2,freq1,positions[7])]}}
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/HomeWork/2020_2021JavaPPT/Java_new_Task1/Experiment1Test/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1cab0bfb]" started-at="2021-04-23T11:45:04Z" name="testReadObject" data-provider="testIndex" finished-at="2021-04-23T11:45:04Z" duration-ms="19" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{
"docIdToDocPathMapping" : {
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}},
"termToPostingListMapping" : {
{activity=[(docId:0,freq3,positions[0, 1, 6]), (docId:1,freq1,positions[0])], benefits=[(docId:0,freq2,positions[2, 7]), (docId:1,freq1,positions[10])], capital=[(docId:0,freq2,positions[3, 8]), (docId:1,freq1,positions[7])], destination=[(docId:0,freq2,positions[4, 9]), (docId:1,freq1,positions[1])], emergency=[(docId:0,freq1,positions[10]), (docId:1,freq1,positions[2])], fizzy=[(docId:0,freq1,positions[5])], frozen=[(docId:1,freq2,positions[9, 14])], google=[(docId:1,freq2,positions[11, 15])], marketplace=[(docId:2,freq1,positions[0])], medical=[(docId:2,freq1,positions[1])], notification=[(docId:2,freq1,positions[3])], peninsula=[(docId:2,freq1,positions[5])], pollution=[(docId:2,freq1,positions[7])]}}
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:/HomeWork/2020_2021JavaPPT/Java_new_Task1/Experiment1Test/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
        <test-method signature="testOptimize(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1cab0bfb]" started-at="2021-04-23T11:45:04Z" name="testOptimize" data-provider="testIndex" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{
"docIdToDocPathMapping" : {
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}},
"termToPostingListMapping" : {
{activity=[(docId:0,freq3,positions[0, 1, 6]), (docId:1,freq1,positions[0])], benefits=[(docId:0,freq2,positions[2, 7]), (docId:1,freq1,positions[10])], capital=[(docId:0,freq2,positions[3, 8]), (docId:1,freq1,positions[7])], destination=[(docId:0,freq2,positions[4, 9]), (docId:1,freq1,positions[1])], emergency=[(docId:0,freq1,positions[10]), (docId:1,freq1,positions[2])], fizzy=[(docId:0,freq1,positions[5])], frozen=[(docId:1,freq2,positions[9, 14])], google=[(docId:1,freq2,positions[11, 15])], marketplace=[(docId:2,freq1,positions[0])], medical=[(docId:2,freq1,positions[1])], notification=[(docId:2,freq1,positions[3])], peninsula=[(docId:2,freq1,positions[5])], pollution=[(docId:2,freq1,positions[7])]}}
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{
"docIdToDocPathMapping" : {
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}},
"termToPostingListMapping" : {
{activity=[(docId:0,freq3,positions[0, 1, 6]), (docId:1,freq1,positions[0])], benefits=[(docId:0,freq2,positions[2, 7]), (docId:1,freq1,positions[10])], capital=[(docId:0,freq2,positions[3, 8]), (docId:1,freq1,positions[7])], destination=[(docId:0,freq2,positions[4, 9]), (docId:1,freq1,positions[1])], emergency=[(docId:0,freq1,positions[10]), (docId:1,freq1,positions[2])], fizzy=[(docId:0,freq1,positions[5])], frozen=[(docId:1,freq2,positions[9, 14])], google=[(docId:1,freq2,positions[11, 15])], marketplace=[(docId:2,freq1,positions[0])], medical=[(docId:2,freq1,positions[1])], notification=[(docId:2,freq1,positions[3])], peninsula=[(docId:2,freq1,positions[5])], pollution=[(docId:2,freq1,positions[7])]}}
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimize -->
        <test-method signature="testGetDocName(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@1cab0bfb]" started-at="2021-04-23T11:45:04Z" name="testGetDocName" data-provider="testIndex" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{
"docIdToDocPathMapping" : {
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}},
"termToPostingListMapping" : {
{activity=[(docId:0,freq3,positions[0, 1, 6]), (docId:1,freq1,positions[0])], benefits=[(docId:0,freq2,positions[2, 7]), (docId:1,freq1,positions[10])], capital=[(docId:0,freq2,positions[3, 8]), (docId:1,freq1,positions[7])], destination=[(docId:0,freq2,positions[4, 9]), (docId:1,freq1,positions[1])], emergency=[(docId:0,freq1,positions[10]), (docId:1,freq1,positions[2])], fizzy=[(docId:0,freq1,positions[5])], frozen=[(docId:1,freq2,positions[9, 14])], google=[(docId:1,freq2,positions[11, 15])], marketplace=[(docId:2,freq1,positions[0])], medical=[(docId:2,freq1,positions[1])], notification=[(docId:2,freq1,positions[3])], peninsula=[(docId:2,freq1,positions[5])], pollution=[(docId:2,freq1,positions[7])]}}
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5cde6747]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocName -->
      </class> <!-- hust.cs.javacourse.search.index.IndexTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java -->
    <test started-at="2021-04-23T11:45:04Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java" finished-at="2021-04-23T11:45:04Z" duration-ms="89">
      <class name="hust.cs.javacourse.search.index.IndexBuilderTest">
        <test-method signature="testBuildIndex(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexBuilderTest@17695df3]" started-at="2021-04-23T11:45:04Z" name="testBuildIndex" data-provider="testIndexBuilder" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{
"docIdToDocPathMapping" : {
{0=D:\HomeWork\2020_2021JavaPPT\Java_new_Task1\Experiment1Test\Experiment1Test\test\text\1.txt, 1=D:\HomeWork\2020_2021JavaPPT\Java_new_Task1\Experiment1Test\Experiment1Test\test\text\2.txt, 2=D:\HomeWork\2020_2021JavaPPT\Java_new_Task1\Experiment1Test\Experiment1Test\test\text\3.txt}},
"termToPostingListMapping" : {
{activity=[(docId:0,freq3,positions[0, 1, 6]), (docId:1,freq1,positions[0])], benefits=[(docId:0,freq2,positions[2, 7]), (docId:1,freq1,positions[10])], capital=[(docId:0,freq2,positions[3, 8]), (docId:1,freq1,positions[7])], destination=[(docId:0,freq2,positions[4, 9]), (docId:1,freq1,positions[1])], emergency=[(docId:0,freq1,positions[10]), (docId:1,freq1,positions[2])], fizzy=[(docId:0,freq1,positions[5])], frozen=[(docId:1,freq2,positions[9, 14])], google=[(docId:1,freq2,positions[11, 15])], marketplace=[(docId:2,freq1,positions[0])], medical=[(docId:2,freq1,positions[1])], notification=[(docId:2,freq1,positions[3])], peninsula=[(docId:2,freq1,positions[5])], pollution=[(docId:2,freq1,positions[7])]}}
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{
"docIdToDocPathMapping" : {
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}},
"termToPostingListMapping" : {
{activity=[(docId:0,freq3,positions[0, 1, 6]), (docId:1,freq1,positions[0])], benefits=[(docId:0,freq2,positions[2, 7]), (docId:1,freq1,positions[10])], capital=[(docId:0,freq2,positions[3, 8]), (docId:1,freq1,positions[7])], destination=[(docId:0,freq2,positions[4, 9]), (docId:1,freq1,positions[1])], emergency=[(docId:0,freq1,positions[10]), (docId:1,freq1,positions[2])], fizzy=[(docId:0,freq1,positions[5])], frozen=[(docId:1,freq2,positions[9, 14])], google=[(docId:1,freq2,positions[11, 15])], marketplace=[(docId:2,freq1,positions[0])], medical=[(docId:2,freq1,positions[1])], notification=[(docId:2,freq1,positions[3])], peninsula=[(docId:2,freq1,positions[5])], pollution=[(docId:2,freq1,positions[7])]}}
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildIndex -->
      </class> <!-- hust.cs.javacourse.search.index.IndexBuilderTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java -->
    <test started-at="2021-04-23T11:45:04Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java" finished-at="2021-04-23T11:45:04Z" duration-ms="83">
      <class name="hust.cs.javacourse.search.query.HitTest">
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@70a9f84e]" started-at="2021-04-23T11:45:04Z" name="testGetDocId" data-provider="testHit" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
post:[(docId:0,freq3,positions[0, 1, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@70a9f84e]" started-at="2021-04-23T11:45:04Z" name="testGetDocId" data-provider="testHit" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
post:[(docId:1,freq1,positions[0])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@70a9f84e]" started-at="2021-04-23T11:45:04Z" name="testGetDocPath" data-provider="testHit" finished-at="2021-04-23T11:45:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
post:[(docId:0,freq3,positions[0, 1, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@70a9f84e]" started-at="2021-04-23T11:45:04Z" name="testGetDocPath" data-provider="testHit" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
post:[(docId:1,freq1,positions[0])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@70a9f84e]" started-at="2021-04-23T11:45:04Z" name="testGetContent" data-provider="testHit" finished-at="2021-04-23T11:45:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
post:[(docId:0,freq3,positions[0, 1, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@70a9f84e]" started-at="2021-04-23T11:45:04Z" name="testGetContent" data-provider="testHit" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
post:[(docId:1,freq1,positions[0])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@70a9f84e]" started-at="2021-04-23T11:45:04Z" name="testSetContent" data-provider="testHit" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:new content1
post:[(docId:0,freq3,positions[0, 1, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@70a9f84e]" started-at="2021-04-23T11:45:04Z" name="testSetContent" data-provider="testHit" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:new content2
post:[(docId:1,freq1,positions[0])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@70a9f84e]" started-at="2021-04-23T11:45:04Z" name="testGetScore" data-provider="testHit" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
post:[(docId:0,freq3,positions[0, 1, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@70a9f84e]" started-at="2021-04-23T11:45:04Z" name="testGetScore" data-provider="testHit" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
post:[(docId:1,freq1,positions[0])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@70a9f84e]" started-at="2021-04-23T11:45:04Z" name="testSetScore" data-provider="testHit" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
post:[(docId:1,freq1,positions[0])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@70a9f84e]" started-at="2021-04-23T11:45:04Z" name="testSetScore" data-provider="testHit" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
post:[(docId:0,freq3,positions[0, 1, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@70a9f84e]" started-at="2021-04-23T11:45:04Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
post:[(docId:0,freq3,positions[0, 1, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@70a9f84e]" started-at="2021-04-23T11:45:04Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt
content:activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
post:[(docId:1,freq1,positions[0])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.query.AbstractHit, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@70a9f84e]" started-at="2021-04-23T11:45:04Z" name="testTestToString" data-provider="testHit" finished-at="2021-04-23T11:45:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt
content:activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
post:[(docId:0,freq3,positions[0, 1, 6])]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@59f63e24]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.query.AbstractHit;, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@70a9f84e]" started-at="2021-04-23T11:45:04Z" name="testCompareTo" data-provider="testHit" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@42463763]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
      </class> <!-- hust.cs.javacourse.search.query.HitTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java -->
    <test started-at="2021-04-23T11:45:04Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java" finished-at="2021-04-23T11:45:04Z" duration-ms="192">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@704921a5]" started-at="2021-04-23T11:45:02Z" name="beforeSuite" finished-at="2021-04-23T11:45:02Z" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
      <class name="hust.cs.javacourse.search.query.IndexSearcherTest">
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@33b37288]" started-at="2021-04-23T11:45:04Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@21baa903]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@607fbe09]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@33b37288]" started-at="2021-04-23T11:45:04Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@4c398c80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@7fc6de5b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testTestSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@33b37288]" started-at="2021-04-23T11:45:04Z" name="testTestSearch" data-provider="testIndexSearcher" finished-at="2021-04-23T11:45:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@60a2630a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@29df4d43]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestSearch -->
      </class> <!-- hust.cs.javacourse.search.query.IndexSearcherTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java -->
  </suite> <!-- All Test Suite -->
</testng-results>
